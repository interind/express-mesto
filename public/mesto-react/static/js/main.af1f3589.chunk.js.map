{"version":3,"sources":["images/header/logoFon.svg","components/Header.js","components/ImagePopup.js","context/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/api.js","components/PopupWithForm.js","components/MarkupForPopups.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/Error/ErrorBoundary.js","components/Loader/Loader.js","utils/array.js","components/App.js","index.js"],"names":["Header","className","src","headerLogo","alt","ImagePopup","selectedCard","onClose","isOpen","popup","classes","popup_opened","onMouseDown","evt","currentTarget","target","link","name","type","title","onClick","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardDelete","onCardLike","_id","useContext","useState","visible","setVisible","Fragment","onError","owner","likes","find","id","map","like","index","length","Main","onEditAvatar","onEditProfile","onAddPlace","handleCardDelete","closeAllPopups","handleCardClick","isOpenCard","cards","handleCardLike","statusOk","about","avatar","style","color","fontFamily","marginTop","textAlign","createdAt","Footer","Date","getFullYear","api","url","token","user","this","_url","_token","_user","_cards","res","ok","json","Promise","reject","Error","status","fetch","headers","authorization","then","_getResponse","method","body","JSON","stringify","infoId","isLike","toggleMethod","PopupWithForm","active","onSubmit","buttonTitle","children","disabledButton","classDisActive","disabled","MarkupForPopups","props","placeholder","value","avatarUser","ref","inputRef","onChange","editAvatar","onInput","validationAvatar","required","avatarMessage","minLength","maxLength","nameProfile","editName","validationProfile","profileMessage","editAbout","place","editPlace","validationPlace","placeMessage","editLink","EditProfilePopup","isLoadingButton","onUpdateUser","profile","currentUser","setName","description","setDescription","activeButton","setActiveButton","validProfile","setValidProfile","useEffect","preventDefault","validity","valid","validationMessage","EditAvatarPopup","onUpdateAvatar","avatarPopup","useRef","setAvatar","validAvatar","setValidAvatar","current","AddPlacePopup","placePopup","namePlace","setPlace","setLink","validPlace","setValidPlace","DeleteCardPopup","onDeleteCard","isCard","deletePopup","ErrorBoundary","state","error","errorInfo","setState","whiteSpace","toString","componentStack","Component","Loader","initialCards","App","isEditAvatarPopupOpen","setEditAvatarPopup","isEditProfilePopupOpen","setEditProfilePopup","isAddPlacePopupOpen","setAddPlacePopup","isConfirmTrashPopupOpen","setConfirmTrashPopup","setIsCard","setCurrentUser","setCards","setSelectedCard","setOpenCard","loading","setLoading","buttonLoading","setButtonLoading","setIsOk","closeAllPopupsEsc","key","window","addEventListener","removeEventListener","all","getInfoForUser","getInfoForCards","dataUser","dataCards","catch","err","console","log","message","finally","Provider","isLiked","some","i","changeLikeCardStatus","newCard","newCards","c","addCard","updateUserAvatar","infoAvatar","updateUserInfo","infoUser","idCard","deleteCard","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1f3589.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoFon.ff16f24b.svg\";","import headerLogo from '../images/header/logoFon.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className='header page__header'>\r\n      <img className='logo header__logo' src={headerLogo} alt='Логотип' />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from 'classnames';\r\n\r\nfunction ImagePopup({ selectedCard, onClose, isOpen }) {\r\n  const popup = classes('popup popup_type_zoom', { popup_opened: isOpen });\r\n  return (\r\n    <div\r\n      className={popup}\r\n      onMouseDown={(evt) => evt.currentTarget === evt.target && onClose()}>\r\n      <div className='popup__zoom'>\r\n        <img\r\n          className='popup__pic'\r\n          src={selectedCard.link}\r\n          alt={selectedCard.name}\r\n        />\r\n        <span className='popup__place-pic'>{selectedCard.name}</span>\r\n        <button\r\n          className='popup__button-close'\r\n          type='button'\r\n          title='закрыть'\r\n          onClick={onClose}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nImagePopup.propTypes = {\r\n  selectedCard: PropTypes.object,\r\n  onClose: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool,\r\n};\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Card({ card, onCardClick, onCardDelete, onCardLike }) {\r\n  const { _id } = React.useContext(CurrentUserContext);\r\n  const [visible, setVisible] = React.useState(true);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {visible && (\r\n        <div className='element'>\r\n          <img\r\n            className='element__pic'\r\n            src={card.link}\r\n            alt={card.name}\r\n            onError={() => {\r\n              setVisible(false);\r\n            }}\r\n            onClick={() => onCardClick(card)}\r\n          />\r\n          <button\r\n            className={`element__button-trash ${\r\n              card.owner &&\r\n              (card.owner._id === _id ? 'element__button-trash_visible' : '')\r\n            }`}\r\n            type='button'\r\n            title='кнопка удаления карточки'\r\n            onClick={() => onCardDelete(card)}></button>\r\n          <div className='element__info'>\r\n            <h2 className='element__title' title={card.name}>\r\n              {card.name}\r\n            </h2>\r\n            {card.likes && (\r\n              <div className='element__like'>\r\n                <button\r\n                  className={`element__button-like element__button-like_color_white ${\r\n                    card.likes.find((id) => id._id === _id)\r\n                      ? 'element__button-like_color_black'\r\n                      : ''\r\n                  }`}\r\n                  type='button'\r\n                  title='кнопка для лайков'\r\n                  onClick={() => onCardLike(card)}></button>\r\n                <span\r\n                  className='element__counter-like'\r\n                  title={card.likes.map(\r\n                    (like, index) => index + 1 + '🖤' + like.name\r\n                  )}>\r\n                  {card.likes.length}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  card: PropTypes.object,\r\n  onCardClick: PropTypes.func.isRequired,\r\n  onCardDelete: PropTypes.func.isRequired,\r\n  onCardLike: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Main({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onAddPlace,\r\n  handleCardDelete,\r\n  closeAllPopups,\r\n  handleCardClick,\r\n  selectedCard,\r\n  isOpenCard,\r\n  cards,\r\n  handleCardLike,\r\n  statusOk,\r\n}) {\r\n  const { name, about, avatar, _id } = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {statusOk ? (\r\n        <section className='profile page__profile'>\r\n          <img\r\n            className='profile__avatar'\r\n            src={avatar}\r\n            alt='Аватарка'\r\n            id={_id}\r\n            onClick={onEditAvatar}\r\n          />\r\n          <div className='profile__info'>\r\n            <h1 className='profile__title' title={name}>\r\n              {name}\r\n            </h1>\r\n            <button\r\n              className='profile__edit-button'\r\n              type='button'\r\n              title='изменить данные профиля'\r\n              onClick={onEditProfile}></button>\r\n            <p className='profile__subtitle' title={about}>\r\n              {about}\r\n            </p>\r\n          </div>\r\n          <button\r\n            className='profile__add-button'\r\n            type='button'\r\n            title='добавить картинки'\r\n            onClick={onAddPlace}></button>\r\n        </section>\r\n      ) : (\r\n        <h1\r\n          style={{\r\n            color: '#fff',\r\n            fontFamily: 'Inter',\r\n            marginTop: '0',\r\n            textAlign: 'center',\r\n          }}>\r\n          Сервер не отвечает 🛠\r\n        </h1>\r\n      )}\r\n      <div className='elements page__elements'>\r\n        {cards.map((card) => {\r\n          return (\r\n            <Card\r\n              onCardDelete={handleCardDelete}\r\n              card={card}\r\n              key={card.createdAt}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <ImagePopup\r\n        selectedCard={selectedCard}\r\n        onClose={closeAllPopups}\r\n        isOpen={isOpenCard}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  onEditAvatar: PropTypes.func.isRequired,\r\n  onEditProfile: PropTypes.func.isRequired,\r\n  onAddPlace: PropTypes.func.isRequired,\r\n  handleCardDelete: PropTypes.func.isRequired,\r\n  closeAllPopups: PropTypes.func.isRequired,\r\n  handleCardClick: PropTypes.func.isRequired,\r\n  selectedCard: PropTypes.object,\r\n  isOpenCard: PropTypes.bool,\r\n  cards: PropTypes.array,\r\n  handleCardLike: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer page__footer'>\r\n      <p className='footer__copyright'>\r\n        &copy;{new Date().getFullYear()} Mesto Russia\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","class Api {\r\n  constructor({ url, token, user, cards }) {\r\n    this._url = url;\r\n    this._token = token;\r\n    this._user = user;\r\n    this._cards = cards;\r\n  }\r\n\r\n  _getResponse(res) {\r\n    return res.ok\r\n      ? res.json()\r\n      : Promise.reject(new Error(`Ошибка api: ${res.status}`));\r\n  }\r\n\r\n  getInfoForUser() {\r\n    return fetch(`${this._url}${this._user}`, {\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    }).then(this._getResponse);\r\n  }\r\n\r\n  getInfoForCards() {\r\n    return fetch(`${this._url}${this._cards}`, {\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    }).then(this._getResponse);\r\n  }\r\n\r\n  updateUserInfo({ name, about }) {\r\n    return fetch(`${this._url}${this._user}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then(this._getResponse);\r\n  }\r\n\r\n  updateUserAvatar({ avatar }) {\r\n    return fetch(`${this._url}${this._user}/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then(this._getResponse);\r\n  }\r\n\r\n  addCard({ name, link }) {\r\n    return fetch(`${this._url}${this._cards}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then(this._getResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(infoId, isLike) {\r\n    const toggleMethod = isLike ? 'PUT' : 'DELETE';\r\n    return fetch(`${this._url}${this._cards}/likes/${infoId}`, {\r\n      method: toggleMethod,\r\n\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    }).then(this._getResponse);\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}${this._cards}/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    }).then(this._getResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-16/',\r\n  token: 'bba27b67-a97d-4fd9-b42d-01c5b1258337',\r\n  user: 'users/me',\r\n  cards: 'cards',\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from 'classnames';\r\n\r\nfunction PopupWithForm({\r\n  active,\r\n  name,\r\n  title,\r\n  onSubmit,\r\n  buttonTitle,\r\n  onClose,\r\n  isOpen,\r\n  children,\r\n}) {\r\n  const disabledButton = active ? 'disabled' : '';\r\n  const classDisActive = active ? 'popup__button-submit_disabled' : '';\r\n  const popup = classes(`popup popup_type_${name}`, { popup_opened: isOpen });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={popup}\r\n        onMouseDown={(evt) => evt.currentTarget === evt.target && onClose()}>\r\n        <form\r\n          className={`popup__container popup__container_type_${name}`}\r\n          name={name}\r\n          onSubmit={onSubmit}>\r\n          <h2 className='popup__title'>{title}</h2>\r\n          {children}\r\n          <button\r\n            className={`popup__button-submit ${classDisActive}`}\r\n            type='submit'\r\n            title={buttonTitle}\r\n            disabled={disabledButton}>\r\n            {buttonTitle}\r\n          </button>\r\n          <button\r\n            className='popup__button-close'\r\n            type='button'\r\n            title='закрыть'\r\n            onClick={onClose}></button>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nPopupWithForm.propTypes = {\r\n  active: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  title: PropTypes.string,\r\n  buttonTitle: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nexport const MarkupForPopups = {\r\n  Avatar: function Avatar(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          className='popup__input'\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          id='input-avatar'\r\n          name='avatar'\r\n          value={props.avatarUser}\r\n          ref={props.inputRef}\r\n          onChange={props.editAvatar}\r\n          onInput={props.validationAvatar}\r\n          required\r\n        />\r\n        {props.avatar !== '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-avatar-error '>\r\n              {props.avatarMessage}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  },\r\n\r\n  Profile: function Profile(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          className='popup__input'\r\n          id='input-name'\r\n          type='text'\r\n          name='name'\r\n          minLength='2'\r\n          maxLength='40'\r\n          placeholder='Имя'\r\n          value={props.nameProfile}\r\n          onChange={props.editName}\r\n          onInput={props.validationProfile}\r\n          required\r\n        />\r\n        {props.nameProfile === '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-name-error'>\r\n              {props.profileMessage.name}\r\n            </span>\r\n          </div>\r\n        )}\r\n        <input\r\n          className='popup__input'\r\n          id='input-about'\r\n          type='text'\r\n          name='about'\r\n          minLength='2'\r\n          maxLength='200'\r\n          placeholder='Профессия'\r\n          value={props.about}\r\n          onChange={props.editAbout}\r\n          onInput={props.validationProfile}\r\n          required\r\n        />\r\n        {props.about === '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-about-error'>\r\n              {props.profileMessage.about}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  },\r\n  Place: function Place(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          className='popup__input'\r\n          type='text'\r\n          placeholder='Название'\r\n          id='input-place'\r\n          name='place'\r\n          minLength='1'\r\n          value={props.place}\r\n          maxLength='30'\r\n          onChange={props.editPlace}\r\n          onInput={props.validationPlace}\r\n          required\r\n        />\r\n        {props.place === '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-place-error'>\r\n              {props.placeMessage.place}\r\n            </span>\r\n          </div>\r\n        )}\r\n        <input\r\n          className='popup__input'\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          id='input-link'\r\n          value={props.link}\r\n          name='link'\r\n          onChange={props.editLink}\r\n          onInput={props.validationPlace}\r\n          required\r\n        />\r\n        {props.link !== '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-link-error'>\r\n              {props.placeMessage.link}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { MarkupForPopups } from './MarkupForPopups.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EditProfilePopup({ isLoadingButton, isOpen, onClose, onUpdateUser }) {\r\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\r\n  const profile = {\r\n    id: 2,\r\n    name: 'profile',\r\n    title: 'Редактировать форму',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [nameProfile, setName] = React.useState({ name: '' });\r\n  const [description, setDescription] = React.useState({ about: '' });\r\n  let [activeButton, setActiveButton] = React.useState(true);\r\n  const [validProfile, setValidProfile] = React.useState({\r\n    name: '',\r\n    about: '',\r\n  });\r\n\r\n  function validationProfile(evt) {\r\n    !evt.target.validity.valid\r\n      ? setValidProfile({\r\n          [evt.target.name]: evt.target.validationMessage,\r\n        })\r\n      : setValidProfile({\r\n          [evt.target.name]: '',\r\n        });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function setNameProfile(evt) {\r\n    setName(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function setDescriptionProfile(evt) {\r\n    setDescription(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    onUpdateUser({\r\n      name: nameProfile,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      key={profile.id}\r\n      name={profile.name}\r\n      title={profile.title}\r\n      buttonTitle={profile.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      active={activeButton}>\r\n      <MarkupForPopups.Profile\r\n        editName={setNameProfile}\r\n        editAbout={setDescriptionProfile}\r\n        nameProfile={nameProfile}\r\n        about={description}\r\n        profileMessage={validProfile}\r\n        validationProfile={validationProfile}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nEditProfilePopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onUpdateUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { MarkupForPopups } from './MarkupForPopups.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EditAvatarPopup({ isLoadingButton, isOpen, onClose, onUpdateAvatar }) {\r\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\r\n  const avatarPopup = {\r\n    id: 1,\r\n    name: 'avatar',\r\n    title: 'Обновить аватар',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n\r\n  const inputRef = React.useRef();\r\n  const [avatarUser, setAvatar] = React.useState('');\r\n  let [activeButton, setActiveButton] = React.useState(true);\r\n  const [validAvatar, setValidAvatar] = React.useState('');\r\n\r\n  function validationAvatar(evt) {\r\n    !evt.target.validity.valid\r\n      ? setValidAvatar(evt.target.validationMessage)\r\n      : setValidAvatar('');\r\n  }\r\n\r\n  function setAvatarUser() {\r\n    setAvatar(inputRef.current.value);\r\n    setActiveButton(!inputRef.current.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    setAvatar('');\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarUser,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      key={avatarPopup.id}\r\n      name={avatarPopup.name}\r\n      title={avatarPopup.title}\r\n      buttonTitle={avatarPopup.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      active={activeButton}>\r\n      <MarkupForPopups.Avatar\r\n        avatarUser={avatarUser}\r\n        inputRef={inputRef}\r\n        editAvatar={setAvatarUser}\r\n        avatarMessage={validAvatar}\r\n        validationAvatar={validationAvatar}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nEditAvatarPopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onUpdateAvatar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { MarkupForPopups } from './MarkupForPopups.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddPlacePopup({ isLoadingButton, isOpen, onClose, onAddPlace }) {\r\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\r\n  const placePopup = {\r\n    id: 3,\r\n    name: 'place',\r\n    title: 'Новое место',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n\r\n  const [namePlace, setPlace] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  let [activeButton, setActiveButton] = React.useState(true);\r\n\r\n  const [validPlace, setValidPlace] = React.useState({\r\n    place: '',\r\n    link: '',\r\n  });\r\n\r\n  function validationPlace(evt) {\r\n    !evt.target.validity.valid\r\n      ? setValidPlace({\r\n          [evt.target.name]: evt.target.validationMessage,\r\n        })\r\n      : setValidPlace({\r\n          [evt.target.name]: '',\r\n        });\r\n  }\r\n\r\n  function setPlaceName(evt) {\r\n    setPlace(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function setLinkPlace(evt) {\r\n    setLink(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    setPlace('');\r\n    setLink('');\r\n    onAddPlace({\r\n      name: namePlace,\r\n      link: link,\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      key={placePopup.id}\r\n      name={placePopup.name}\r\n      title={placePopup.title}\r\n      buttonTitle={placePopup.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      active={activeButton}\r\n      onSubmit={handleSubmit}>\r\n      <MarkupForPopups.Place\r\n        place={namePlace}\r\n        link={link}\r\n        editPlace={setPlaceName}\r\n        editLink={setLinkPlace}\r\n        placeMessage={validPlace}\r\n        validationPlace={validationPlace}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nAddPlacePopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onAddPlace: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DeleteCardPopup({\r\n  isLoadingButton,\r\n  isOpen,\r\n  onClose,\r\n  onDeleteCard,\r\n  isCard,\r\n}) {\r\n  const textButton = isLoadingButton ? 'Удаляем...' : 'Да';\r\n  const deletePopup = {\r\n    id: 4,\r\n    name: 'trash',\r\n    title: 'Вы уверены?',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    onDeleteCard(isCard);\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      key={deletePopup.id}\r\n      name={deletePopup.name}\r\n      title={deletePopup.title}\r\n      buttonTitle={deletePopup.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nDeleteCardPopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onDeleteCard: PropTypes.func.isRequired,\r\n  isCard: PropTypes.object,\r\n};\r\n\r\nexport default DeleteCardPopup;\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo,\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h2>Что-то пошло не так!</h2>\r\n          <details style={{ whiteSpace: 'pre-wrap' }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nfunction Loader() {\r\n  return <div className='lds-dual-ring'></div>;\r\n}\r\n\r\nexport default Loader;\r\n","export const initialCards = [\r\n  {\r\n    _id: '111',\r\n    name: 'new Moscow',\r\n    link:\r\n      'https://images.unsplash.com/photo-1573384293689-0327bf65bd86?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=650&q=80',\r\n    createdAt: '14.11.2020/15.25',\r\n  },\r\n  {\r\n    _id: '112',\r\n    name: 'Екатеринбург',\r\n    link:\r\n      'https://images.unsplash.com/photo-1521099466350-1c6df08788fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1510&q=80',\r\n    createdAt: '14.11.2020/15.26',\r\n  },\r\n  {\r\n    _id: '113',\r\n    name: 'окно в Европу',\r\n    link:\r\n      'https://images.unsplash.com/photo-1585860401301-7cc704a1baac?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=998&q=80',\r\n    createdAt: '14.11.2020/15.27',\r\n  },\r\n  {\r\n    _id: '114',\r\n    name: 'тоже Москва',\r\n    link:\r\n      'https://images.unsplash.com/photo-1574977102169-5c36ce5d4a29?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80',\r\n    createdAt: '14.11.2020/15.28',\r\n  },\r\n  {\r\n    _id: '115',\r\n    name: 'Где-то в горах',\r\n    link:\r\n      'https://images.unsplash.com/photo-1535556848694-67eb6b318fa7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1510&q=80',\r\n    createdAt: '14.11.2020/15.29',\r\n  },\r\n  {\r\n    _id: '116',\r\n    name: 'летим домой',\r\n    link:\r\n      'https://images.unsplash.com/photo-1543223917-0e9d7131681f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1334&q=80',\r\n    createdAt: '14.11.2020/15.30',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport api from '../utils/api.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\nimport DeleteCardPopup from './DeleteCardPopup.js';\r\nimport ErrorBoundary from './Error/ErrorBoundary.js';\r\nimport Loader from './Loader/Loader.js';\r\nimport { initialCards } from '../utils/array.js';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopup] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopup] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopup] = React.useState(false);\r\n  const [isConfirmTrashPopupOpen, setConfirmTrashPopup] = React.useState(false);\r\n  const [isCard, setIsCard] = React.useState({});\r\n  const [currentUser, setCurrentUser] = React.useState({\r\n    name: '',\r\n    about: '',\r\n    _id: '',\r\n    avatar: '',\r\n  }); // тут информация обо мне с сервера\r\n  const [cards, setCards] = React.useState([]); // тут информация о карточках\r\n  const [selectedCard, setSelectedCard] = React.useState({}); // объект для попапа с картинкой\r\n  const [isOpenCard, setOpenCard] = React.useState(false); // тут булевое значение для попапа с картинкой\r\n  const [loading, setLoading] = React.useState(true); // лоадер при загрузке страницы\r\n  const [buttonLoading, setButtonLoading] = React.useState(false); // Лоадер для кнопки сохранить.\r\n  const [statusOk, setIsOk] = React.useState(true);\r\n\r\n  function closeAllPopupsEsc(evt) {\r\n    if (evt.key === 'Escape') {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('keydown', closeAllPopupsEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', closeAllPopupsEsc);\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    // получаем данные с сервера\r\n    Promise.all([api.getInfoForUser(), api.getInfoForCards()])\r\n      .then(([dataUser, dataCards]) => {\r\n        setCurrentUser(dataUser);\r\n        setCards(dataCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log('Информация сервера с ошибкой', err.message);\r\n        setIsOk(false);\r\n        setCurrentUser({});\r\n        setCards(initialCards);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  function handleUpdateUser(props) {\r\n    // получаем новую информацию пользователя  с сервера\r\n    setButtonLoading(true);\r\n\r\n    api\r\n      .updateUserInfo({ name: props.name, about: props.about })\r\n      .then((infoUser) => {\r\n        setCurrentUser({\r\n          ...currentUser,\r\n          name: infoUser.name,\r\n          about: infoUser.about,\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        console.log('Информация обновления пользователя с ошибкой', err)\r\n      )\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar(props) {\r\n    setButtonLoading(true);\r\n    // получаем обновленный аватар с сервера\r\n    api\r\n      .updateUserAvatar({ avatar: props.avatar })\r\n      .then((infoAvatar) => {\r\n        setCurrentUser({ ...currentUser, avatar: infoAvatar.avatar });\r\n      })\r\n      .catch((err) =>\r\n        console.log('Информация обновления пользователя с ошибкой', err)\r\n      )\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  function handleAddPlace(props) {\r\n    setButtonLoading(true);\r\n    // получаем новую карточку с сервера и вставляем в начало\r\n    api\r\n      .addCard({ name: props.name, link: props.link })\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .catch((err) =>\r\n        console.log('Информация обновления карточки с ошибкой', err)\r\n      )\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    // закрытие всех попапов\r\n    setEditAvatarPopup(false);\r\n    setEditProfilePopup(false);\r\n    setAddPlacePopup(false);\r\n    setConfirmTrashPopup(false);\r\n    setOpenCard(false);\r\n    setButtonLoading(false);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopup(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopup(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopup(true);\r\n  }\r\n  function handleConfirmTrashClick(card) {\r\n    setConfirmTrashPopup(true);\r\n    setIsCard(card);\r\n  }\r\n  function handleCardClick(props) {\r\n    // для открытия попапа с картинкой\r\n    setSelectedCard({ link: props.link, name: props.name });\r\n    setOpenCard(true);\r\n  }\r\n\r\n  function handleCardLike({ likes, _id }) {\r\n    // получаем лайки с сервера\r\n    const isLiked = likes.some((i) => i._id === currentUser._id);\r\n\r\n    api\r\n      .changeLikeCardStatus(_id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => (c._id === _id ? newCard : c));\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) =>\r\n        console.log('Информация по карточкам с ошибкой', err.message)\r\n      );\r\n  }\r\n\r\n  function handleCardDelete({ _id }) {\r\n    // удаляем карточку\r\n    const idCard = _id;\r\n\r\n    setButtonLoading(true);\r\n\r\n    api\r\n      .deleteCard(_id)\r\n      .then(() => {\r\n        setCards(cards.filter((card) => card._id !== idCard));\r\n      })\r\n      .catch((err) =>\r\n        console.log('Информация по карточкам с ошибкой', err.message)\r\n      )\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='page'>\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n          <ErrorBoundary>\r\n            <Header />\r\n            <Main\r\n              onEditProfile={handleEditProfileClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              handleCardDelete={handleConfirmTrashClick}\r\n              closeAllPopups={closeAllPopups}\r\n              handleCardClick={handleCardClick}\r\n              selectedCard={selectedCard}\r\n              isOpenCard={isOpenCard}\r\n              handleCardLike={handleCardLike}\r\n              cards={cards}\r\n              statusOk={statusOk}\r\n            />\r\n            {loading && <Loader />}\r\n            {statusOk && (\r\n              <React.Fragment>\r\n                <AddPlacePopup\r\n                  isOpen={isAddPlacePopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onAddPlace={handleAddPlace}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n                <EditAvatarPopup\r\n                  isOpen={isEditAvatarPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onUpdateAvatar={handleUpdateAvatar}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n                <EditProfilePopup\r\n                  isOpen={isEditProfilePopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onUpdateUser={handleUpdateUser}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n                <DeleteCardPopup\r\n                  isOpen={isConfirmTrashPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onDeleteCard={handleCardDelete}\r\n                  isCard={isCard}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <Footer />\r\n          </ErrorBoundary>\r\n        </CurrentUserContext.Provider>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}